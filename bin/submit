#!/usr/bin/env python3
"""
submit
~~~~~
Submit puzzle solution and update example2.txt if needed.
"""
import sys
import time
from datetime import date
from pathlib import Path

import typer
from aocd.models import Puzzle
from typing_extensions import Annotated

BIN_DIR = Path(__file__).parent
REPO_DIR = BIN_DIR.parent


def die(message: str) -> None:
    print(message, file=sys.stderr)
    raise typer.Exit(1)


def today() -> int:
    return date.today().day


def is_unlocked(puzzle: Puzzle) -> bool:
    return time.time() >= puzzle.unlock_time().timestamp()


def valid_part(part: int):
    if part not in (1, 2):
        raise typer.BadPameter("Only 1 or 2 is allowed.")
    return part


def main(
    part: Annotated[int, typer.Argument(callback=valid_part)],
    answer: Annotated[int, typer.Argument()],
    day: Annotated[int, typer.Option()] = today(),
):
    puzzle = Puzzle(year=2023, day=day)
    if not is_unlocked(puzzle):
        die(f"Puzzle day {day} is not yet unlocked.")

    if part == 1:
        puzzle.answer_a = answer
    else:
        puzzle.answer_b = answer
        return

    puzzle = Puzzle(year=2023, day=day)
    if len(puzzle.examples) != 2:
        return

    example2_txt = REPO_DIR / f"day{day:02}" / "example2.txt"
    if example2_txt.is_symlink():
        example2_txt.unlink()
        example2_txt.write_text(puzzle.examples[1].input_data + "\n")


if __name__ == "__main__":
    typer.run(main)
